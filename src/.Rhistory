onc.smod <- apply(onc.sweb, 3, bipartite::computeModules)
mods.onc.sweb <- unlist(lapply(onc.smod, slot, name = "likelihood"))
write.csv(mods.onc.sweb, file = "../data/lichen_networks/mod_simvals_onc.csv", row.names = FALSE)
# nest.onc <- bipartite::nestedness(onc.com.rel)
}else{
mods.onc.sweb <- read.csv(file = "../data/lichen_networks/mod_simvals_onc.csv")[, 1]
}
# pit
if (!("mod_obsval_pit.csv" %in% dir("../data/lichen_networks"))){
mod.pit <- slot(bipartite::computeModules(rel(pit.com), deep = FALSE),
"likelihood")
write.csv(mod.pit, file = "../data/lichen_networks/mod_obsval_pit.csv", row.names = FALSE)
}else{
mod.pit <- read.csv(file = "../data/lichen_networks/mod_obsval_pit.csv")[, 1]
}
if (!("mod_simvals_pit.csv" %in% dir("../data/lichen_networks"))){
pit.sweb <- simulate(vegan::nullmodel(pit.com, method = "swsh_samp_c"), 99)
for (i in 1:dim(pit.sweb)[3]){pit.sweb[,, i] <- rel(pit.sweb[,, i])}
pit.smod <- apply(pit.sweb, 3, bipartite::computeModules)
mods.pit.sweb <- unlist(lapply(pit.smod, slot, name = "likelihood"))
write.csv(mods.pit.sweb, file = "../data/lichen_networks/mod_simvals_pit.csv", row.names = FALSE)
# nest.pit <- bipartite::nestedness(pit.com.rel)
}else{
mods.pit.sweb <- read.csv(file = "../data/lichen_networks/mod_simvals_pit.csv")[, 1]
}
### Wild data
###
###
x <- read.csv('../data/lichen_networks/lco_Apr2012.csv')
#remove notes
x <- x[,colnames(x)!='NOTES.']
x <- x[,colnames(x)!='dead']
#
x <- na.omit(x)
#remove gnu.44 = FREMONT
x <- x[x$tree!='gnu.44',]
#remove ll.6, weird tree with super smooth bark
x <- x[x$tree!='ll.6',]
x$tree <- factor(as.character(x$tree))
#condense species
#lecanora, there can be only one!
lec.sp <- apply(x[,c(6,8,10,18)],1,function(x) sign(any(x!=0)))
#no physcioids!
#phy.spp <- apply(x[,c(13,14,15,16)],1,function(x) sign(any(x!=0)))
x <- cbind(x,lec=lec.sp)
x <- x[,-c(6,8,10,18)]
x <- x[,colnames(x)!='physcioid']
#break into quadrat list (x.q)
quads <- paste(x$tree,x$quadrat)
colnames(x)[5:ncol(x)] <- c('Xg','Cs', 'Xm', 'fgb', 'Rs', 'Pm' ,'Pa', 'Pu','Ch','Ls')
x <- x[colnames(x)!='fgb']
x.q <- split(x,quads)
wild.com <- split(x,x$tree)
wild.com <- do.call(rbind,lapply(wild.com,function(x) apply(x[,-1:-4],2,sum)))
wild.com.rel <- apply(wild.com, 2, function(x) x/max(x))
wild.com.rel[is.na(wild.com.rel)] <- 0
wild.q <- lapply(split(x,x$tree),function(x) x[,-1:-4])
#data from lamit
env <- read.csv('../data/lichen_networks/Uinta2012_all_data_from_Lamit.csv')
env <- env[is.na(env$Pct.Roughness) == FALSE,]
env[,1] <- sub('\\?','',sub('\\.0','\\.',sub('\\_','\\.',sub('\\-','\\.',tolower(as.character(env[,1]))))))
env[env[,1] == 'll.6_(znu.29)',1] <- 'll.6'
env[env[,1] == 'gnu.85.1ftaway',1] <- 'gnu.85'
env$Quad.Loc <- as.character(sapply(as.character(env$Quad.Loc),function(x) unlist(strsplit(x,split='_'))[2]))
env$Quad.Loc <- sub('\\-','\\.',env$Quad.Loc)
env$Quad.Loc <- paste('n',env$Quad.Loc,sep='')
#remove southern aspect
env <- env[env$Aspect!='South',]
env.tid <- paste(env$Tree.ID,env$Quad.Loc)
#check that the datasets are compatible
all(names(x.q)%in%env.tid)
#match observations
all(env.tid[match(names(x.q),env.tid)] == names(x.q))
#delimit to co-occurrence dataset and match
env <- env[match(names(x.q),env.tid),]
x.split <- paste(x$tree,x$quadrat,sep='_')
env.split <- paste(env$Tree.ID,env$Quad.Loc)
x.split <- as.character(x$tree)
env.split <- as.character(env$Tree.ID)
prb.wild <- tapply(env$Pct.Roughness,env.split,mean) #percent rough bark
#age
age <- read.csv('../data/lichen_networks/UintaMaster_LichenHeritNL_FallSpring_2012_ForLau.csv')
dbh <- age$DBH.cm_01
age.final <- age$AgeFinal.U
age <- data.frame(tree.id=age[,1],age.final=age$AgeFinal.U)
age[,1] <- tolower(age[,1])
age[,1] <- sub('_','\\.',age[,1])
age[,1] <- sub('-','\\.',age[,1])
age[,1] <- sub('\\?','',age[,1])
age[,1] <- sub('\\.0','\\.',age[,1])
age[age[,1] == 'gnu.85.1ftaway',1] <- 'gnu.85'
#predict age
gnu19.dbh <- dbh[age$tree.id == 'gnu.19']
new <- data.frame(dbh=seq(min(dbh),max(dbh),by=0.1))
age.final <- na.omit(age.final)
pred.age <- predict(lm(age.final~dbh,data=age),new)
gnu19.age <- as.numeric(pred.age[new[,1] == gnu19.dbh])
#
tree.age <- age[match(names(prb.wild),age[,1]),2]
tree.age[is.na(tree.age)] <- gnu19.age
names(tree.age) <- age[match(names(prb.wild),age[,1]),1]
age <- tree.age
# networks
cn.wild <- lapply(wild.q, coNet)
cn.mu.wild <- netMean(cn.wild)
cn.d.wild <- netDist(cn.wild, method = 'bc')
#co-occurrence patterns
wco <- do.call(rbind,lapply(wild.q,function(x,t) apply(CoCo(x,type=t),2,sum),t='pos'))
wch <- do.call(rbind,lapply(wild.q,function(x,t) apply(CoCo(x,type=t),2,sum),t='neg'))
#get ses values
#"z" "means" "pval" "simulated" "method" "statistic" "alternative"
#ws <- lapply(wild.q,function(x) oecosimu(x,cs,method='r1',burnin=100,thin=10,nsimul=5000))
#wses <- unlist(lapply(ws,function(x) x$oecosimu[[1]]))
#wsmu <- unlist(lapply(ws,function(x) x$oecosimu[[2]]))
#wsp <- unlist(lapply(ws,function(x) x$oecosimu[[3]]))
#wsim <- do.call(rbind,lapply(ws,function(x) x$oecosimu[[4]]))
#rownames(wsim) <- names(wild.q)
#ws <- cbind(wses,wsmu,wsp)
#write.csv(ws,file='../data/wild_ses_21mar2014.csv')
## Araujo Coordinate Values
coord <- read.csv('../data/lichen_networks/lcn_coord_onc.csv')
rownames(coord) <- coord[,1]
coord <- coord[,-1]
# wild
if (!("mod_obsval_wild.csv" %in% dir("../data/lichen_networks"))){
mod.wild <- slot(bipartite::computeModules(rel(wild.com), deep = FALSE),
"likelihood")
write.csv(mod.wild, file = "../data/lichen_networks/mod_obsval_wild.csv", row.names = FALSE)
}else{
mod.wild <- read.csv(file = "../data/lichen_networks/mod_obsval_wild.csv")[, 1]
}
if (!("mod_simvals_wild.csv" %in% dir("../data/lichen_networks"))){
wild.sweb <- simulate(vegan::nullmodel(wild.com, method = "swsh_samp_c"), 99)
for (i in 1:dim(wild.sweb)[3]){wild.sweb[,, i] <- rel(wild.sweb[,, i])}
wild.smod <- apply(wild.sweb, 3, bipartite::computeModules)
mods.wild.sweb <- unlist(lapply(wild.smod, slot, name = "likelihood"))
write.csv(mods.wild.sweb, file = "../data/lichen_networks/mod_simvals_wild.csv", row.names = FALSE)
# nest.wild <- bipartite::nestedness(wild.com.rel)
}else{
mods.wild.sweb <- read.csv(file = "../data/lichen_networks/mod_simvals_wild.csv")[, 1]
}
###Rename data objects for simplicity
ws <- read.csv('../data/lichen_networks/wild_ses_21mar2014.csv')
### REML
### We know from Lamit's dissertation work that lichen communities are
### heritable, largely driven by bark roughness
### Do we find similar patterns?
## Create a list to generate a results table
h2.tab <- matrix("", 8, 4)
colnames(h2.tab) <- c("Response",  "H2", "R2", "p-value")
## Total cover ~ genotype
ptc.reml <- lme4::lmer(I(PC^(1/2)) ~ (1 | geno),
data = onc.dat, REML = TRUE)
ptc.reml.pval <- RLRsim::exactRLRT(ptc.reml)
ptc.reml.pval
fligner.test(onc.dat$PC^(1/2), onc.dat$geno)
shapiro.test(residuals(ptc.reml))
h2.tab[1, "p-value"] <- ptc.reml.pval$"p.value"
h2.tab[1, "H2"] <- H2(ptc.reml, g = onc.dat$geno)
h2.tab[1, "R2"] <- R2(ptc.reml)
R2(ptc.reml)
h2.tab[1, "Response"] <- "Percent Lichen Cover"
## Species richness ~ genotype
spr.reml <- lme4::lmer(I(SR^(1/2)) ~ (1 | geno),
data = onc.dat, REML = TRUE)
spr.reml.pval <- RLRsim::exactRLRT(spr.reml)
spr.reml.pval
shapiro.test(residuals(spr.reml))
fligner.test(onc.dat$SR^(1/2), onc.dat$geno)
h2.tab[2, "p-value"] <- spr.reml.pval$"p.value"
h2.tab[2, "H2"] <- H2(spr.reml, g = onc.dat$geno)
h2.tab[2, "R2"] <- R2(spr.reml)
R2(spr.reml)
h2.tab[2, "Response"] <- "Lichen Species Richness"
## Bark roughness REML
prb.reml <- lme4::lmer(I(BR^(1/2)) ~ (1 | geno), data = onc.dat, REML = TRUE)
prb.reml.pval <- RLRsim::exactRLRT(prb.reml)
prb.reml.pval
fligner.test(onc.dat$BR^(1/2), onc.dat$geno)
shapiro.test(residuals(prb.reml))
h2.tab[3, "p-value"] <- prb.reml.pval$"p.value"
h2.tab[3, "H2"] <- H2(prb.reml, g = onc.dat$geno)
h2.tab[3, "R2"] <- R2(prb.reml)
R2(prb.reml)
h2.tab[3, "Response"] <- "Percent Rough Bark"
## condensed tannins  REML
ct.reml <- lme4::lmer(I(CT^(1/4)) ~ (1 | geno), data = onc.dat, REML = TRUE)
ct.reml.pval <- RLRsim::exactRLRT(ct.reml)
ct.reml.pval
fligner.test(onc.dat$CT^(1/4), onc.dat$geno)
shapiro.test(residuals(ct.reml))
## CN ratio REML
cnr.reml <- lme4::lmer(I(CN^(1/1)) ~ (1 | geno), data = onc.dat, REML = TRUE)
cnr.reml.pval <- RLRsim::exactRLRT(cnr.reml)
cnr.reml.pval
fligner.test(onc.dat$CN^(1/1), onc.dat$geno)
shapiro.test(residuals(cnr.reml))
## Is species richness correlated with percent cover?
cor.test(onc.dat[, "SR"], onc.dat[, "PC"], data = onc.dat)
## Were these correlated with bark roughness?
ptc.prb.lm <- lm(I(PC^(1/2)) ~ I(BR^(1/2)), data = onc.dat)
summary(ptc.prb.lm)
fligner.test(onc.dat$PC, onc.dat$BR)
shapiro.test(residuals(ptc.prb.lm))
spr.prb.lm <- lm(I(SR^(1)) ~ I(BR^(1/2)), data = onc.dat)
summary(spr.prb.lm)
fligner.test(onc.dat$SR^(1), onc.dat$BR)
shapiro.test(residuals(spr.prb.lm))
## COM ~ genotype + Bark roughness + PTC + SPR
set.seed(2)
rcom.ng.perm <- vegan::adonis2(onc.com.rel^(1/1) ~ BR + PC + SR,
data = onc.dat, perm = 10000, mrank = TRUE)
set.seed(2)
rcom.perm <- vegan::adonis2(onc.com.rel^(1/1) ~ geno + BR + PC + SR,
data = onc.dat, perm = 10000, mrank = TRUE)
set.seed(2)
com.ng.perm <- vegan::adonis2(onc.com^(1/1) ~ BR + PC + SR,
data = onc.dat, perm = 10000, mrank = TRUE)
set.seed(2)
com.perm <- vegan::adonis2(onc.com^(1/1) ~ geno + BR + PC + SR,
data = onc.dat, perm = 10000, mrank = TRUE)
rcom.ng.perm
rcom.perm
h2.tab[4, "p-value"] <- unlist(rcom.perm)["Pr(>F)1"]
h2.tab[4, "H2"] <- H2(rcom.perm, g = onc.dat$geno)
h2.tab[4, "R2"] <- R2(rcom.perm)
h2.tab[4, "Response"] <- "Lichen Community Composition"
## Is network similarity correlated with community composition?
ecodist::mantel(cn.d.onc ~ vegdist(onc.com.rel), mrank = TRUE)
spr.d <- dist(onc.dat$SR)
ptc.d <- dist(onc.dat$PC)
prb.d <- dist(onc.dat$BR)
### rough -> cover -> rich -> net
ecodist::mantel(cn.d.onc ~ vegdist(onc.com.rel) + spr.d + ptc.d + prb.d, mrank = TRUE)
## Partial Mantels using RFLP distance
ecodist::mantel(cn.mu.d.onc ~ rflp.d)
ecodist::mantel(onc.com.mu.d ~ rflp.d)
ecodist::mantel(cn.mu.d.onc ~ onc.com.mu.d)
## Was lichen network similarity determined by genotype?
set.seed(1234)
cn.perm <- vegan::adonis2(cn.d.onc ~ geno + BR +  PC + SR,
data = onc.dat, permutations = 10000, mrank = TRUE)
set.seed(1234)
cn.perm.ng <- vegan::adonis2(cn.d.onc ~ BR + PC  + SR,
data = onc.dat, permutations = 10000, mrank = TRUE)
cn.perm.ng
cn.perm
h2.tab[5, "p-value"] <- as.matrix(cn.perm)[1, "Pr(>F)"]
h2.tab[5, "H2"] <- H2(cn.perm, g = onc.dat[, "geno"], perm =10000)
h2.tab[5, "R2"] <- R2(cn.perm)
h2.tab[5, "Response"] <- "Lichen Network"
# db rda for network similarity
dbr.cn.geno <- vegan::dbrda(cn.d.onc ~ geno, data = onc.dat, distance = "bray")
anova(dbr.cn.geno, permutations = 5000)
H2(dbr.cn.geno)
## What aspects of networks explained the similiarity?
## L = number of edges, LD = link density, C = connectivity,
## dcen = degree centrality
link.reml <- lme4::lmer(I(log(L + 0.00000001) ) ~ (1 | geno),
data = onc.dat, REML = TRUE)
link.reml.pval <- RLRsim::exactRLRT(link.reml, nsim = 50000)
link.reml.pval
fligner.test(log(onc.dat$L + 0.0000001), onc.dat$geno)
shapiro.test(residuals(link.reml))
h2.tab[6, "p-value"] <- link.reml.pval$"p.value"
h2.tab[6, "H2"] <- H2(link.reml, g = onc.dat$geno)
h2.tab[6, "R2"] <- R2(link.reml)
R2(link.reml)
h2.tab[6, "Response"] <- "Number of Network Links"
# network centrality
cen.reml <- lme4::lmer(I(Cen^(1/2))  ~ (1 | geno),
data = onc.dat, REML = TRUE)
cen.reml.pval <- RLRsim::exactRLRT(cen.reml, nsim = 50000)
cen.reml.pval
fligner.test(onc.dat$L^(1/1), onc.dat$geno)
shapiro.test(residuals(cen.reml))
h2.tab[7, "p-value"] <- cen.reml.pval$"p.value"
h2.tab[7, "H2"] <- H2(cen.reml, g = onc.dat$geno)
h2.tab[7, "R2"] <- R2(cen.reml)
R2(cen.reml)
h2.tab[7, "Response"] <- "Network Centrality"
# network modularity
mod.reml <- lme4::lmer(I(onc.ns[, "mod.lik"]^(1/4)) ~ (1 | geno),
data = onc.dat, REML = TRUE)
mod.reml.pval <- RLRsim::exactRLRT(mod.reml)
mod.reml.pval
fligner.test(onc.ns[, "mod.lik"]^(1/4), onc.dat$geno)
shapiro.test(residuals(mod.reml))
h2.tab[8, "p-value"] <- mod.reml.pval$"p.value"
h2.tab[8, "H2"] <- H2(mod.reml, g = onc.dat$geno)
h2.tab[8, "R2"] <- R2(mod.reml)
h2.tab[8, "Response"] <- "Network Modularity"
# network stats in relation to other variables
L.aov <- aov(I(log(L + 0.000001)) ~ BR + PC + SR, data = onc.dat)
summary(L.aov)
shapiro.test(residuals(L.aov))
cen.aov <- aov(I(Cen^(1/2)) ~ BR + PC + SR, data = onc.dat)
summary(cen.aov)
shapiro.test(residuals(cen.aov))
mod.aov <- aov(I(onc.ns[, "mod.lik"]^(1/4)) ~ BR + PC + SR, data = onc.dat)
summary(mod.aov)
shapiro.test(residuals((mod.aov)))
##
cor.test(onc.ns[, "L"], onc.ns[, "Cen"])
# are these metrics correlated with network similarity
L.d <- dist(onc.dat$L)
cen.d <- dist(onc.dat$Cen)
mod.d <- dist(cn.mod.onc)
cn.L.cen.perm <- adonis2(cn.d.onc ~ L + Cen, data = onc.dat, mrank = TRUE)
## So, are there patterns in the centrality of individual lichen species?
sppcen.test <- apply(cen.spp[, apply(cen.spp, 2, sum) >= 2], 2, function(x)
lme4::lmer(I(x^(1/2)) ~ (1 | geno), data = onc.dat, REML = TRUE))
sppcen.pval <- lapply(sppcen.test, RLRsim::exactRLRT)
sppcen.tab <- do.call(rbind, lapply(sppcen.pval, function(x)
c(x[["statistic"]], x[["p.value"]])))
sppcen.h2 <- round(unlist(lapply(sppcen.test, H2)), 3)
sppcen.h2
## Mean centrality of species
sort(apply(cen.spp, 2, mean), decreasing = TRUE)
## Ordinations
### nits = 10,
### iconf = random
### epsilon = 1e-12 = acceptable change in stress
### maxit = 500 = maximum number of iterations
ord.com <- nmds.min(nms.com, 3)
## Minimum stress for given dimensionality:  0.1008923
## r^2 for minimum stress configuration:  0.9357192
ord.cn <- nmds.min(nms.cn, 2)
## Minimum stress for given dimensionality:  0.01065177
## r^2 for minimum stress configuration:  0.9993026
## checking variance explained by ordinations
ord1.cn.reml <- lme4::lmer(I(ord.cn[, 1]^(1/1)) ~ (1 | geno),
data = onc.dat, REML = TRUE)
ord2.cn.reml <- lme4::lmer(I(ord.cn[, 2]^(1/1)) ~ (1 | geno),
data = onc.dat, REML = TRUE)
ord1.cn.reml.pval <- RLRsim::exactRLRT(ord1.cn.reml)
ord2.cn.reml.pval <- RLRsim::exactRLRT(ord2.cn.reml)
ord1.cn.reml.pval
ord2.cn.reml.pval
fligner.test(ord.cn[, 1]^(1/1), onc.dat$geno)
fligner.test(ord.cn[, 2]^(1/1), onc.dat$geno)
ord1.com.reml <- lme4::lmer(I(ord.com[, 1]^(1/1)) ~ (1 | geno),
data = onc.dat, REML = TRUE)
ord2.com.reml <- lme4::lmer(I(ord.com[, 2]^(1/1)) ~ (1 | geno),
data = onc.dat, REML = TRUE)
ord1.com.reml.pval <- RLRsim::exactRLRT(ord1.com.reml)
ord2.com.reml.pval <- RLRsim::exactRLRT(ord2.com.reml)
ord1.com.reml.pval
ord2.com.reml.pval
fligner.test(ord.com[, 1]^(1/1), onc.dat$geno)
fligner.test(ord.com[, 2]^(1/1), onc.dat$geno)
fligner.test(ord.com[, 3]^(1/1), onc.dat$geno)
summary(lm(ord.cn[, 1] ~ SR + PC, data = onc.dat))
summary(lm(ord.cn[, 2] ~ SR + PC, data = onc.dat))
summary(lm(ord.com[, 1] ~ SR + PC, data = onc.dat))
summary(lm(ord.com[, 2] ~ SR + PC, data = onc.dat))
## Lichen size distribution
## X. gallericulata thalli are about 0.22 +/- 0.003 cm^2 on average
## with an average median size of 0.12 +/- 0.001 cm^2
## and, size does not vary significantly with genotype.
xgs.reml <- lme4::lmer(I(mean.thallus) ~ (1 | geno),
data = xgs.data[xgs.data$geno %in% names(which(table(xgs.data$geno) > 2)), ],
REML = TRUE)
xgs.median.reml <- lme4::lmer(median.thallus ~ (1 | geno),
data = xgs.data[xgs.data$geno %in% names(which(table(xgs.data$geno) > 2)), ],
REML = TRUE)
RLRsim::exactRLRT(xgs.reml)
RLRsim::exactRLRT(xgs.median.reml)
fligner.test(xgs.data$mean.thallus, xgs.data$geno)
fligner.test(xgs.data$median.thallus, xgs.data$geno)
mean(xgs.data$mean.thallus)
sd(xgs.data$mean.thallus) / (length(xgs.data$mean.thallus) - 1)
mean(xgs.data$median.thallus)
sd(xgs.data$median.thallus) / (length(xgs.data$median.thallus) - 1)
# ONC and Wild Stand (Uintah)
# Network distances
cn.all <- cn.wild
for (i in 1:length(cn.wild)){
cn.all[[i]] <- cn.wild[[i]][match(rownames(cn.onc[[1]]), rownames(cn.wild[[i]])),
match(colnames(cn.onc[[1]]), colnames(cn.wild[[i]]))]
}
cn.all <- append(cn.all, cn.onc)
cn.d.all <- netDist(cn.all, method = "bc")
if (!exists("cn.nms.all")){cn.nms.all <- nmds.min(nmds(cn.d.all, 2, 2))}
h2.tab[, "H2"] <- round(as.numeric(h2.tab[, "H2"]), digits = 5)
h2.tab[, "R2"] <- round(as.numeric(h2.tab[, "R2"]), digits = 5)
h2.tab[, "p-value"] <- round(as.numeric(h2.tab[, "p-value"]), digits = 5)
h2.tab <- h2.tab[order(h2.tab[, "H2"], decreasing = TRUE), ]
h2.xtab <- xtable::xtable(h2.tab, caption =
"Genotypic effects of cottonwood trees on the associated lichen community.",
label = "tab:h2_table")
print(h2.xtab,
type = "latex",
include.rownames = FALSE,
include.colnames = TRUE
)
print(h2.xtab,
type = "latex",
file = "../results/h2_table.tex",
include.rownames = FALSE,
include.colnames = TRUE
)
# community permanova
rcom.ng.perm.xtab <- xtable::xtable(rcom.ng.perm, caption =
"PerMANOVA Pseudo-F Table showing the predictors of community similarity.",
label = "tab:com_ng_perm")
print(rcom.ng.perm.xtab,
type = "latex",
include.rownames = TRUE,
include.colnames = TRUE
)
print(rcom.ng.perm.xtab,
type = "latex",
file = "../results/com_ng_perm_table.tex",
include.rownames = TRUE,
include.colnames = TRUE
)
rcom.perm.xtab <- xtable::xtable(rcom.perm, caption =
"PerMANOVA Pseudo-F Table showing the predictors of community similarity.",
label = "tab:rcom_perm")
print(rcom.perm.xtab,
type = "latex",
include.rownames = TRUE,
include.colnames = TRUE
)
print(rcom.perm.xtab,
type = "latex",
file = "../results/rcom_perm.tex",
include.rownames = TRUE,
include.colnames = TRUE
)
# network permanova
cn.perm.ng.xtab <- xtable::xtable(cn.perm.ng, caption =
"PerMANOVA Pseudo-F Table showing the predictors of network similarity.",
label = "tab:cn_perm_ng")
print(cn.perm.ng.xtab,
type = "latex",
include.rownames = TRUE,
include.colnames = TRUE
)
print(cn.perm.ng.xtab,
type = "latex",
file = "../results/cn_perm_ng.tex",
include.rownames = TRUE,
include.colnames = TRUE
)
cn.perm.xtab <- xtable::xtable(cn.perm, caption =
"PerMANOVA Pseudo-F Table showing the predictors of network similarity.",
label = "tab:cn_perm")
print(cn.perm.xtab,
type = "latex",
include.rownames = TRUE,
include.colnames = TRUE
)
print(cn.perm.xtab,
type = "latex",
file = "../results/cn_perm.tex",
include.rownames = TRUE,
include.colnames = TRUE
)
# network metrics anova
L.aov.xtab <- xtable::xtable(L.aov, caption =
"ANOVA F Table showing the predictors of the number of network links.",
label = "tab:L_aov")
print(L.aov.xtab,
type = "latex",
include.rownames = TRUE,
include.colnames = TRUE
)
print(L.aov.xtab,
type = "latex",
file = "../results/L_aov.tex",
include.rownames = TRUE,
include.colnames = TRUE
)
cen.aov.xtab <- xtable::xtable(cen.aov, caption =
"ANOVA F Table showing the predictors of network centralization.",
label = "tab:cen_aov")
print(cen.aov.xtab,
type = "latex",
include.rownames = TRUE,
include.colnames = TRUE
)
print(cen.aov.xtab,
type = "latex",
file = "../results/cen_aov.tex",
include.rownames = TRUE,
include.colnames = TRUE
)
# networks and network metrics
# permanova
cn.L.cen.perm.xtab <- xtable::xtable(cn.L.cen.perm, caption =
"PerMANOVA Pseudo-F Table showing the predictors of network similarity.",
label = "tab:cn_L_cen_perm")
print(cn.L.cen.perm.xtab,
type = "latex",
include.rownames = TRUE,
include.colnames = TRUE
)
print(cn.L.cen.perm.xtab,
type = "latex",
file = "../results/cn_L_cen_perm.tex",
include.rownames = TRUE,
include.colnames = TRUE
)
par(mfrow = c(1, 1), mar = c(5.1, 4.1, 4.1, 2.1) / 1)
chp.coord <- ch.plot(ord.com[, 1:2], onc.geno,
cex = 2, mu.pch = 19,
pt.col = "white",
bar.col = "darkgrey")
text(chp.coord, labels = rownames(chp.coord))
plot(vec.com.12, col = "black", lwd = 4)
