?r_make
?make
loadd(onc.dat, reml.results, perm.results)
h2.tab
head(reml.results)
loadd(trait.results)
rm.na = TRUE
prb.reml
unlist(prb.reml)
prb.reml["statistic"]
names(prb.reml)
prb.reml
summary(prb.reml)
names(summary(prb.reml))
prb.reml.pval
names(prb.reml.pval)
loadd(onc.dat, trait.results)
reml.results = run_reml(onc.dat = onc.dat, trait.results = trait.results)
reml.results
loadd(onc.dat, reml.results, perm.results)
h2.tab
loadd(onc.dat, trait.results)
reml.results = run_reml(onc.dat, trait.results)
reml.results
loadd(perm.results)
digits = 4
h2.tab
perm.results
perm.results[["com"]]
as.data.frame(perm.results[["com"]])["geno", "Pr(>F)"]
as.data.frame(perm.results[["com"]])["geno", "F"]
as.data.frame(perm.results[["com"]])
colnames(h2.tab)
ht.tab
h2.tab
cn.perm.h2
h2.tab
h2.tab[c("cn.perm.h2", "com.perm.h2"),]
cn.perm.h2
com.perm.h2
out
?RLRsim
?exactRLRT
sample(0, 10000)
sample(0:10000, 1)
cor.test(1:10, runif(10))
names(cor.test(1:10, runif(10)))
cor.test(1:10, runif(10))["estimate"]
summary(lm((1:10, runif(10)))
summary(lm(1:10, runif(10)))
summary(lm((1:10) ~ runif(10)))
loadd(ond.at)
loadd(onc.dat)
cm
cm
loadd(trait.results)
summary(trait.net.results[["br_L"]])[["r.squared"]]
summary(trait.results[["br_L"]])[["r.squared"]]
summary(trait.results[["br_L"]])
names(summary(trait.results[["br_L"]]))
summary(trait.results[["br_L"]])[[c("df", "fstatistic", "r.squared")]]
summary(trait.results[["br_L"]])[c("df", "fstatistic", "r.squared")]
trait.results[["br_L"]]
summary(trait.results[["br_L"]])
summary(trait.results[["br_L"]])["fstatistic"]
summary(trait.results[["br_L"]])["tstatistic"]
summary(trait.results[["br_L"]])["estimate"]
names(summary(trait.results[["br_L"]]))
(summary(trait.results[["br_L"]]))[["terms"]]
names(summary(trait.results[["br_L"]]))
summary(trait.results[["br_L"]])
as.data.frame(summary(trait.results[["br_L"]]))
names(summary(trait.results[["br_L"]]))
summary(trait.results[["br_L"]])[["coefficients"]]
cm
cm
summary(trait.results[["br_L"]])[["coefficients"]]
summary(trait.results[["br_L"]])[["rsquared"]]
summary(trait.results[["br_L"]])[["r.squared"]]
0.3386^2
-0.3386^2
(-0.3386)^2
summary(trait.results[["br_L"]])
cor.test(onc.dat[, "L", onc.dat[, "BR"]]
cor.test(onc.dat[, "L", onc.dat[, "BR"]])
cor.test(onc.dat[, "L"], onc.dat[, "BR"])
summary(lm(onc.dat[, "L"], onc.dat[, "BR"]))
summary(lm(onc.dat[, "L"]~ onc.dat[, "BR"]))
summary(lm(onc.dat[, "L"]^(1/4)~ onc.dat[, "BR"]))
cor.test(onc.dat[, "L"]^(1/4), onc.dat[, "BR"])
(-0.4535753 )^2
out
out
lapply(out, summary)
reml.results <- lapply(out, summary)
out <-  trait.results
rm(reml.results)
loadd(reml.results)
out
cm
unlist(cm[c("BR", "CT", "pH", "CN"), c("L", "Cen", "AMI")])
as.vector(cm[c("BR", "CT", "pH", "CN"), c("L", "Cen", "AMI")])
as.vector(cm[c("L", "Cen", "AMI"), c("BR", "CT", "pH", "CN")])
do.call(rbind, out)
out
out[,1]
cm
cm
cm
trait.results
out
out
u[[1]]
out[[1]]
out[[1]]
names(out[[1]])
out[[1]][["terms"]]
out[[1]][["coefficients"]]
as.matrix(out[[1]][["coefficients"]])
out[1]
out[[1]]
out
out
out
out
out
r2
r2
r
r
r2
r^2 - r2
round(r^2 - r2,2)
txtplot::txtplot(r, r2)
r2
txtplot::txtplot(r^2, r2)
cm
cm[c("L", "Cen", "AMI"), c("BR", "CT", "pH", "CN")]
as.vector(cm[c("L", "Cen", "AMI"), c("BR", "CT", "pH", "CN")])
r2
-0.33^2
trait.results
trait.results = run_trait_path(onc.dat)
r^2 - r2
round(r^2 - r2, 2)
out
out
out
colnames(out)
q()
n
load("data/onc_lcn_data.Rdata")
onc.dat
attach(onc.dat)
cor(BR, L)
cor.test(BR, L)
q()
n
loadd(lcn.dat)
loadd(onc.dat)
rank(sample(1:5, 5))
rank(sample(1:5, 5))
rank(sample(1:5, 5))
ct.reml
rlrt.seed = 2623
nsim = 100000
ct.reml.pval
ct.reml.result
cnr.reml.pval
loadd(cn.d.onc)
cn.trait.perm
cn.trait.perm
cn.trait.perm
cn.trait.perm
?adonis2
loadd(onc.com)
com.perm
cn.perm
cn.trait.perm
cn.trait.perm
cn.trait.geno
ct.reml.result
q()
n
